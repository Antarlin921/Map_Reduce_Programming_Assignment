# Which vendors have the most trips, and what is the total revenue generated by that vendor?

from mrjob.job import MRJob
from mrjob.step import MRStep

class MyMapReduce(MRJob):

    def steps(self):
        return [
            MRStep(mapper=self.mapper,combiner=self.combiner,reducer=self.reducer),
            MRStep(reducer=self.sort_by_total_trips)
        ]
    def mapper(self, _, line):
        if(not line.startswith('VendorID')):
           vendorID=line.split(',')[0]
           total_amt=float(line.split(',')[16])
           yield vendorID, (total_amt,1)
    
    def combiner(self, vendorID, total_amt):
        tt_amt=0
        tt_trips=0
        for tot_amt,tot_trips in total_amt:
            tt_amt+=tot_amt
            tt_trips+=tot_trips
        yield vendorID, (tt_amt, tt_trips)
    
    def reducer(self, vendorID, total_amt):
        tt_amt=0
        tt_trips=0
        for tot_amt,tot_trips in total_amt:
            tt_amt+=tot_amt
            tt_trips+=tot_trips
        yield None, ((tt_trips,tt_amt),vendorID)
    
    def sort_by_total_trips(self, _,pair):
        sorted_pairs = sorted(pair, reverse = True)
        for pair in sorted_pairs:
            yield (pair[1],pair[0])
            break

#           
if __name__ == '__main__':
    MyMapReduce.run()

"""
python vendorTripCount.py input > out.txt
"""